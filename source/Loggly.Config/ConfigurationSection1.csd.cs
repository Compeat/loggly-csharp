//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Loggly.Config
{
    
    
    /// <summary>
    /// The LogglyConfig Configuration Section.
    /// </summary>
    public partial class LogglyConfig : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the LogglyConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LogglyConfigSectionName = "loggly";
        
        /// <summary>
        /// The XML path of the LogglyConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LogglyConfigSectionPath = "loggly";
        
        /// <summary>
        /// Gets the LogglyConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static global::Loggly.Config.LogglyConfig Instance
        {
            get
            {
                return ((global::Loggly.Config.LogglyConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::Loggly.Config.LogglyConfig.LogglyConfigSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.LogglyConfig.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Loggly.Config.LogglyConfig.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region CustomerToken Property
        /// <summary>
        /// The XML name of the <see cref="CustomerToken"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string CustomerTokenPropertyName = "customerToken";
        
        /// <summary>
        /// Gets or sets the CustomerToken.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The CustomerToken.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.LogglyConfig.CustomerTokenPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string CustomerToken
        {
            get
            {
                return ((string)(base[global::Loggly.Config.LogglyConfig.CustomerTokenPropertyName]));
            }
            set
            {
                base[global::Loggly.Config.LogglyConfig.CustomerTokenPropertyName] = value;
            }
        }
        #endregion
        
        #region Tags Property
        /// <summary>
        /// The XML name of the <see cref="Tags"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TagsPropertyName = "tags";
        
        /// <summary>
        /// Gets or sets the Tags.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Tags.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.LogglyConfig.TagsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Loggly.Config.Tags Tags
        {
            get
            {
                return ((global::Loggly.Config.Tags)(base[global::Loggly.Config.LogglyConfig.TagsPropertyName]));
            }
            set
            {
                base[global::Loggly.Config.LogglyConfig.TagsPropertyName] = value;
            }
        }
        #endregion
        
        #region Transport Property
        /// <summary>
        /// The XML name of the <see cref="Transport"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TransportPropertyName = "transport";
        
        /// <summary>
        /// Gets or sets the Transport.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Transport.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.LogglyConfig.TransportPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Loggly.Config.Transport Transport
        {
            get
            {
                return ((global::Loggly.Config.Transport)(base[global::Loggly.Config.LogglyConfig.TransportPropertyName]));
            }
            set
            {
                base[global::Loggly.Config.LogglyConfig.TransportPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Loggly.Config
{
    
    
    /// <summary>
    /// A collection of ComplexTagConfig instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Loggly.Config.ComplexTagConfig), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Loggly.Config.ComplexTags.ComplexTagConfigPropertyName)]
    public partial class ComplexTags : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Loggly.Config.ComplexTagConfig"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ComplexTagConfigPropertyName = "complex";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Loggly.Config.ComplexTags.ComplexTagConfigPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Loggly.Config.ComplexTags.ComplexTagConfigPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Loggly.Config.ComplexTagConfig)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Loggly.Config.ComplexTagConfig"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Loggly.Config.ComplexTagConfig"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Loggly.Config.ComplexTagConfig();
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Loggly.Config.ComplexTagConfig"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="complex">The <see cref="global::Loggly.Config.ComplexTagConfig"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Loggly.Config.ComplexTagConfig complex)
        {
            base.BaseAdd(complex);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Loggly.Config.ComplexTagConfig"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="complex">The <see cref="global::Loggly.Config.ComplexTagConfig"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Loggly.Config.ComplexTagConfig complex)
        {
            base.BaseRemove(this.GetElementKey(complex));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Loggly.Config.ComplexTagConfig"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Loggly.Config.ComplexTagConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Loggly.Config.ComplexTagConfig GetItemAt(int index)
        {
            return ((global::Loggly.Config.ComplexTagConfig)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Loggly.Config.ComplexTagConfig"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Loggly.Config.ComplexTagConfig"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Loggly.Config.ComplexTagConfig GetItemByKey(string name)
        {
            return ((global::Loggly.Config.ComplexTagConfig)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Loggly.Config
{
    
    
    /// <summary>
    /// The ComplexTagConfig Configuration Element.
    /// </summary>
    public partial class ComplexTagConfig : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.ComplexTagConfig.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Loggly.Config.ComplexTagConfig.NamePropertyName]));
            }
            set
            {
                base[global::Loggly.Config.ComplexTagConfig.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Assembly Property
        /// <summary>
        /// The XML name of the <see cref="Assembly"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AssemblyPropertyName = "assembly";
        
        /// <summary>
        /// Gets or sets the Assembly.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Assembly.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.ComplexTagConfig.AssemblyPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Assembly
        {
            get
            {
                return ((string)(base[global::Loggly.Config.ComplexTagConfig.AssemblyPropertyName]));
            }
            set
            {
                base[global::Loggly.Config.ComplexTagConfig.AssemblyPropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.ComplexTagConfig.TypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::Loggly.Config.ComplexTagConfig.TypePropertyName]));
            }
            set
            {
                base[global::Loggly.Config.ComplexTagConfig.TypePropertyName] = value;
            }
        }
        #endregion
        
        #region Formatter Property
        /// <summary>
        /// The XML name of the <see cref="Formatter"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string FormatterPropertyName = "formatter";
        
        /// <summary>
        /// Gets or sets the Formatter.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Formatter.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.ComplexTagConfig.FormatterPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Formatter
        {
            get
            {
                return ((string)(base[global::Loggly.Config.ComplexTagConfig.FormatterPropertyName]));
            }
            set
            {
                base[global::Loggly.Config.ComplexTagConfig.FormatterPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Loggly.Config
{
    
    
    /// <summary>
    /// A collection of Tag instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Loggly.Config.Tag), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Loggly.Config.SimpleTags.TagPropertyName)]
    public partial class SimpleTags : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Loggly.Config.Tag"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TagPropertyName = "tag";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Loggly.Config.SimpleTags.TagPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Loggly.Config.SimpleTags.TagPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Loggly.Config.Tag)(element)).Value;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Loggly.Config.Tag"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Loggly.Config.Tag"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Loggly.Config.Tag();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Loggly.Config.Tag"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Loggly.Config.Tag"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Loggly.Config.Tag this[int index]
        {
            get
            {
                return ((global::Loggly.Config.Tag)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Loggly.Config.Tag"/> with the specified key.
        /// </summary>
        /// <param name="value">The key of the <see cref="global::Loggly.Config.Tag"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Loggly.Config.Tag this[object value]
        {
            get
            {
                return ((global::Loggly.Config.Tag)(base.BaseGet(value)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Loggly.Config.Tag"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="tag">The <see cref="global::Loggly.Config.Tag"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Loggly.Config.Tag tag)
        {
            base.BaseAdd(tag);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Loggly.Config.Tag"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="tag">The <see cref="global::Loggly.Config.Tag"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Loggly.Config.Tag tag)
        {
            base.BaseRemove(this.GetElementKey(tag));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Loggly.Config.Tag"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Loggly.Config.Tag"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Loggly.Config.Tag GetItemAt(int index)
        {
            return ((global::Loggly.Config.Tag)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Loggly.Config.Tag"/> with the specified key.
        /// </summary>
        /// <param name="value">The key of the <see cref="global::Loggly.Config.Tag"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Loggly.Config.Tag GetItemByKey(string value)
        {
            return ((global::Loggly.Config.Tag)(base.BaseGet(((object)(value)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Loggly.Config
{
    
    
    /// <summary>
    /// The Tag Configuration Element.
    /// </summary>
    public partial class Tag : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.Tag.ValuePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Loggly.Config.Tag.ValuePropertyName]));
            }
            set
            {
                base[global::Loggly.Config.Tag.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Loggly.Config
{
    
    
    /// <summary>
    /// The Tags Configuration Element.
    /// </summary>
    public partial class Tags : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Simple Property
        /// <summary>
        /// The XML name of the <see cref="Simple"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string SimplePropertyName = "simple";
        
        /// <summary>
        /// Gets or sets the Simple.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Simple.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.Tags.SimplePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Loggly.Config.SimpleTags Simple
        {
            get
            {
                return ((global::Loggly.Config.SimpleTags)(base[global::Loggly.Config.Tags.SimplePropertyName]));
            }
            set
            {
                base[global::Loggly.Config.Tags.SimplePropertyName] = value;
            }
        }
        #endregion
        
        #region Complex Property
        /// <summary>
        /// The XML name of the <see cref="Complex"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ComplexPropertyName = "complex";
        
        /// <summary>
        /// Gets or sets the Complex.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Complex.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.Tags.ComplexPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Loggly.Config.ComplexTags Complex
        {
            get
            {
                return ((global::Loggly.Config.ComplexTags)(base[global::Loggly.Config.Tags.ComplexPropertyName]));
            }
            set
            {
                base[global::Loggly.Config.Tags.ComplexPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Loggly.Config
{
    
    
    /// <summary>
    /// The Transport Configuration Element.
    /// </summary>
    public partial class Transport : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region http Property
        /// <summary>
        /// The XML name of the <see cref="http"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string httpPropertyName = "http";
        
        /// <summary>
        /// Gets or sets the http.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The http.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.Transport.httpPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Loggly.Config.HttpTransport http
        {
            get
            {
                return ((global::Loggly.Config.HttpTransport)(base[global::Loggly.Config.Transport.httpPropertyName]));
            }
            set
            {
                base[global::Loggly.Config.Transport.httpPropertyName] = value;
            }
        }
        #endregion
        
        #region credentials Property
        /// <summary>
        /// The XML name of the <see cref="credentials"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string credentialsPropertyName = "credentials";
        
        /// <summary>
        /// Gets or sets the credentials.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The credentials.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.Transport.credentialsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Loggly.Config.Credentials credentials
        {
            get
            {
                return ((global::Loggly.Config.Credentials)(base[global::Loggly.Config.Transport.credentialsPropertyName]));
            }
            set
            {
                base[global::Loggly.Config.Transport.credentialsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Loggly.Config
{
    
    
    /// <summary>
    /// The HttpTransport Configuration Element.
    /// </summary>
    public partial class HttpTransport : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Loggly.Config
{
    
    
    /// <summary>
    /// The Credentials Configuration Element.
    /// </summary>
    public partial class Credentials : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region domain Property
        /// <summary>
        /// The XML name of the <see cref="domain"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string domainPropertyName = "domain";
        
        /// <summary>
        /// Gets or sets the domain.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The domain.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.Credentials.domainPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string domain
        {
            get
            {
                return ((string)(base[global::Loggly.Config.Credentials.domainPropertyName]));
            }
            set
            {
                base[global::Loggly.Config.Credentials.domainPropertyName] = value;
            }
        }
        #endregion
        
        #region username Property
        /// <summary>
        /// The XML name of the <see cref="username"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string usernamePropertyName = "username";
        
        /// <summary>
        /// Gets or sets the username.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The username.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.Credentials.usernamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string username
        {
            get
            {
                return ((string)(base[global::Loggly.Config.Credentials.usernamePropertyName]));
            }
            set
            {
                base[global::Loggly.Config.Credentials.usernamePropertyName] = value;
            }
        }
        #endregion
        
        #region password Property
        /// <summary>
        /// The XML name of the <see cref="password"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string passwordPropertyName = "password";
        
        /// <summary>
        /// Gets or sets the password.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The password.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Loggly.Config.Credentials.passwordPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string password
        {
            get
            {
                return ((string)(base[global::Loggly.Config.Credentials.passwordPropertyName]));
            }
            set
            {
                base[global::Loggly.Config.Credentials.passwordPropertyName] = value;
            }
        }
        #endregion
    }
}
